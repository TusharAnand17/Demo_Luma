package com.epam.luma.stepdefinitions;\n\nimport com.epam.luma.pages.RegistrationPage;\nimport io.cucumber.java.en.And;\nimport io.cucumber.java.en.Given;\nimport io.cucumber.java.en.Then;\nimport io.cucumber.java.en.When;\nimport org.junit.Assert;\n\npublic class RegistrationFormStepDefinitions {\n    private RegistrationPage registrationPage = new RegistrationPage();\n\n    @Given("the user is on the registration form")\n    public void theUserIsOnTheRegistrationForm() {\n        registrationPage.navigateToRegistrationForm();\n    }\n\n    @When("the user leaves all required fields empty")\n    public void theUserLeavesAllRequiredFieldsEmpty() {\n        registrationPage.leaveAllRequiredFieldsEmpty();\n    }\n\n    @When("the user submits the form")\n    public void theUserSubmitsTheForm() {\n        registrationPage.submitForm();\n    }\n\n    @Then("the system highlights all required fields")\n    public void theSystemHighlightsAllRequiredFields() {\n        Assert.assertTrue(registrationPage.areRequiredFieldsHighlighted());\n    }\n\n    @Then("a generic required field validation message is shown")\n    public void aGenericRequiredFieldValidationMessageIsShown() {\n        Assert.assertTrue(registrationPage.isRequiredFieldValidationMessageShown());\n    }\n\n    @When("the user enters an invalid email format {string}")\n    public void theUserEntersAnInvalidEmailFormat(String email) {\n        registrationPage.enterEmail(email);\n    }\n\n    @Then("a generic invalid email format message is displayed")\n    public void aGenericInvalidEmailFormatMessageIsDisplayed() {\n        Assert.assertTrue(registrationPage.isInvalidEmailFormatMessageDisplayed());\n    }\n\n    @When("the user enters a password {string}")\n    public void theUserEntersAPassword(String password) {\n        registrationPage.enterPassword(password);\n    }\n\n    @Then("the password strength indicator reflects weakness")\n    public void thePasswordStrengthIndicatorReflectsWeakness() {\n        Assert.assertTrue(registrationPage.isPasswordWeak());\n    }\n\n    @Then("a generic validation error is shown")\n    public void aGenericValidationErrorIsShown() {\n        Assert.assertTrue(registrationPage.isValidationErrorShown());\n    }\n\n    @When("the user enters a different value in Confirm Password {string}")\n    public void theUserEntersADifferentValueInConfirmPassword(String confirmPassword) {\n        registrationPage.enterConfirmPassword(confirmPassword);\n    }\n\n    @Then("a mismatch error message is shown")\n    public void aMismatchErrorMessageIsShown() {\n        Assert.assertTrue(registrationPage.isMismatchErrorMessageShown());\n    }\n\n    @When("the user enters valid values for all required fields")\n    public void theUserEntersValidValuesForAllRequiredFields(io.cucumber.datatable.DataTable dataTable) {\n        registrationPage.enterValidValues(dataTable);\n    }\n\n    @Then("a new account is created")\n    public void aNewAccountIsCreated() {\n        Assert.assertTrue(registrationPage.isAccountCreated());\n    }\n\n    @Then("a generic success message or redirection occurs")\n    public void aGenericSuccessMessageOrRedirectionOccurs() {\n        Assert.assertTrue(registrationPage.isSuccessMessageOrRedirection());\n    }\n\n    @When("the user enters an email {string}")\n    public void theUserEntersAnEmail(String email) {\n        registrationPage.enterEmail(email);\n    }\n\n    @Then("a generic email already exists message is shown")\n    public void aGenericEmailAlreadyExistsMessageIsShown() {\n        Assert.assertTrue(registrationPage.isEmailAlreadyExistsMessageShown());\n    }\n\n    @When("the user enters values with leading/trailing spaces in any input fields")\n    public void theUserEntersValuesWithLeadingTrailingSpacesInAnyInputFields(io.cucumber.datatable.DataTable dataTable) {\n        registrationPage.enterValuesWithLeadingTrailingSpaces(dataTable);\n